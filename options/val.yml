# general settings
name: Test
scale: 4
num_gpu: 4
manual_seed: 0

# ----------------- options for synthesizing training data in RealESRNetModel ----------------- #
gt_usm: True  # USM the ground-truth

# the first degradation process
resize_prob: [0.2, 0.7, 0.1]  # up, down, keep
resize_range: [0.15, 1.5]
gaussian_noise_prob: 0.5
noise_range: [1, 30]
poisson_scale_range: [0.05, 3]
gray_noise_prob: 0.4
jpeg_range: [30, 95]

# the second degradation process
second_blur_prob: 0.8
resize_prob2: [0.3, 0.4, 0.3]  # up, down, keep
resize_range2: [0.3, 1.2]
gaussian_noise_prob2: 0.5
noise_range2: [1, 25]
poisson_scale_range2: [0.05, 2.5]
gray_noise_prob2: 0.4
jpeg_range2: [30, 95]

gt_size: 192
queue_size: 90

# dataset and data loader settings
datasets:
  val:
    name: DF2K+OST
    type: RealESRGANDataset_val
    dataroot_gt: /group/30042/public_datasets/RestoreData/DF2K
    meta_info: /group/30042/public_datasets/RestoreData/DF2K/meta_info/DIV2K_valid_HR.txt
    io_backend:
      type: disk

    blur_kernel_size: 21
    kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.1
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 21
    kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.1
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.8

    gt_size: 192
    use_hflip: True
    use_rot: False

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 5
    batch_size_per_gpu: 6
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

#  # Uncomment these for validation
#  val:
#    name: Collect
#    type: SingleImageDataset
#    dataroot_lq: datasets/RealESRGAN_Test/Collect
#    io_backend:
#      type: disk

# network structures
network_g:
  # type: yzRRDBNetV21
  # num_in_ch: 3
  # num_out_ch: 3
  # num_feat: 64
  # num_block: 6
  # num_grow_ch: 32
  de_net_type: yzDEResNetV21
  num_degradation: 2
  degradation_degree_actv: sigmoid
  num_feats: [64, 128, 256, 512]
  num_blocks: [2, 2, 2, 2]
  downscales: [2, 2, 2, 1]

path:
  pretrain_network_g: experiments/pretrained_models/ESRGAN_SRx4_DF2KOST_official-ff704c30.pth #experiments/w2111_RealESRNetx4Block6/models/net_g_100000.pth
  param_key_g: params_ema
  strict_load_g: false
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [1000000]
    gamma: 0.5

  total_iter: 1000000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  rank_opt:
    type: MarginRankingLoss
    loss_weight: 0.01  # very sensitive to this weight, too large will make sigmoid/tanh tend to be saturated
    margin: 0.05
#  constraint_opt:
#    type: MSELoss
#    loss_weight: 0.01

# Uncomment these for validation
# validation settings
val:
 val_freq: !!float 1e5
 save_img: True

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
